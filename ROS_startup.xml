<launch>
  <!-- Transformation Configuration - Setting Up the Relationships Between Coordinate Frames --> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.0 0 0.17 0 0 0 base_link laser 30" />
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.0 -0.05 0 0 0 base_link imu_link 30" /> <!--to change later on-->
  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.17 0 0 0 base_footprint base_link 30" />

  <!-- odom to base_footprint transform will be provided by the odomtransformer node -->
  <!-- map to odom will be provided by the AMCL -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" /> -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_trash_map" args="0 0 0 0 0 0 map trash_map 30" />
  <!-- Lidar Data Publisher Using RPLIDAR A1 from Slamtec -->
  <!-- Used for obstacle avoidance and can be used for mapping --> 
  <!-- Publish: /scan -->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>  
  

   <!-- Odom Data Publisher Using the modified Hector package -->
  <!-- Publish: /odom -->
  <!-- Hector scan matcher odom-->
	<node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
   		<remap from="map" to="trash_map" />
    	<remap from="scanmatch_odom" to="odom"/>
      <remap from="initialpose" to="trash_initialpose"/>
      <param name="map_frame" value="trash_map" />
    	<param name="base_frame" value="base_footprint" />
    	<param name="odom_frame" value="odom" />
      <param name="scan_topic" value="scan"/>
		  <param name="pub_odometry" value="true" />
    	<param name="use_tf_scan_transformation" value="true"/>
		  <param name="use_tf_pose_start_estimate" value="false"/>
    	<param name="pub_map_odom_transform" value="false" />
    
		  <param name="map_resolution" value="1.0"/>
    	<param name="map_size" value="256"/>
    	<param name="map_start_x" value="0.5"/>
    	<param name="map_start_y" value="0.5" />
		  <param name="map_multi_res_levels" value="2" />
    
    	<param name="update_factor_free" value="0.4" />
    	<param name="update_factor_occupied" value="0.9" />    
    	<param name="map_update_distance_thresh" value="0.4" />
    	<param name="map_update_angle_thresh" value="0.06" />
    	<param name="laser_z_min_value" value = "-1.0" />
    	<param name="laser_z_max_value" value = "1.0" />

    	<param name="advertise_map_service" value="false" />
    
    	<param name="scan_subscriber_queue_size" value="1"/>
    	<param name="pub_map_scanmatch_transform" value="false" />
    	<param name="tf_map_scanmatch_transform_frame_name" value="odom" />
	</node>


  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyUSB0"/>
    <param name="baud" value="115200"/>
  </node>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen">
    <rosparam command = "load" file="$(find navstack_pub)/param/robot_localization_config.yaml"/>
  </node>
  
  <node name="imutransformer" pkg="navstack_pub" type="imutransformer.py" output="screen" />

  <node name="odomtransformer" pkg="navstack_pub" type="odomtransformer.py" output="screen">
		<param name="odom_input" value="/odom" />
		<param name="tf_output" value="/base_footprint" />
	</node>

  
  <!-- DO TEGO MIEJSCA JEST W MIARE OK PROBOJE NAPRAWIC ERROR -->


  <!-- <arg name="config_file" default="$(find imu_filter_madgwick)/config/default.yaml" />
  <node pkg="imu_filter_madgwick" name="imu_filter_node" type="imu_filter_node" output="screen" required="false"> </node> -->

  <!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d /home/ubuntu/catkin_ws/src/mecanum_bot/navstack_pub/maps/automecanum.rviz">
  </node> 

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d --> 
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>   

  <!-- Map File -->
  <arg name="map_file" default="$(find navstack_pub)/maps/lab8_2.yaml"/>
	
  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
  <!-- Move Base Node -->
  <!-- Subscribe: /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="controller_frequency" value="5.0" />
    <remap from="/odom" to="/odometry/filtered" />
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/base_local_planner_params.yaml" command="load" />
  </node>


  <!-- Add corrected AMCL for omni drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <!--<include file="$(find amcl)/examples/amcl_omni.launch"/>-->
  <node pkg="amcl" type="amcl" name="amcl">
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_model_type" value="omni-corrected"/>
    <param name="odom_alpha5" value="0.003"/>
    <param name="gui_publish_rate" value="5.0"/>
    <param name="laser_max_beams" value="30"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="5000"/>
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.005"/>
    <param name="odom_alpha2" value="0.005"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.01"/>
    <param name="odom_alpha4" value="0.005"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <!-- <param name="laser_model_type" value="beam"/> -->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="update_min_d" value="0.2"/>
    <param name="update_min_a" value="0.5"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="resample_interval" value="1"/>
    <param name="transform_tolerance" value="0.3"/>
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>
</node>
  
</launch>
